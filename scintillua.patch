diff -r 77399602f8dc src/SciTEBase.cxx
--- scite/src/SciTEBase.cxx	Wed Jul 28 10:38:18 2010 +1000
+++ scite/src/SciTEBase.cxx	Tue Aug 31 17:56:05 2010 -0400
@@ -352,6 +352,7 @@
 	characterSet = 0;
 	language = "java";
 	lexLanguage = SCLEX_CPP;
+	lexLPeg = -1;
 	functionDefinition = 0;
 	indentOpening = true;
 	indentClosing = true;
diff -r 77399602f8dc src/SciTEBase.h
--- scite/src/SciTEBase.h	Wed Jul 28 10:38:18 2010 +1000
+++ scite/src/SciTEBase.h	Tue Aug 31 17:56:05 2010 -0400
@@ -406,6 +406,7 @@
 	int characterSet;
 	SString language;
 	int lexLanguage;
+	int lexLPeg;
 	StringList apis;
 	SString apisFileNames;
 	SString functionDefinition;
diff -r 77399602f8dc src/SciTEGlobal.properties
--- scite/src/SciTEGlobal.properties	Wed Jul 28 10:38:18 2010 +1000
+++ scite/src/SciTEGlobal.properties	Tue Aug 31 17:56:05 2010 -0400
@@ -5,6 +5,17 @@
 
 # Globals
 
+# scintillua properties by Mitchell
+lexer.lua.home=$(SciteDefaultHome)/lexers
+lexer.lua.script=$(SciteDefaultHome)/lexers/lexer.lua
+lexer.lua.color.theme=scite
+fold.by.indentation=0
+if PLAT_WIN
+	lexerpath.*.llpeg=$(SciteDefaultHome)/lexers/LexLPeg.dll
+if PLAT_GTK
+	lexerpath.*.llpeg=$(SciteDefaultHome)/lexers/liblexlpeg.so
+lexer.*.llpeg=llpeg
+
 # Window sizes and visibility
 if PLAT_WIN
 	position.left=0
@@ -504,6 +515,7 @@
 #Lot|lot||\
 #Lout|lt||\
 Lu&a|lua||\
+LPeg|llpeg||\
 Matlab|m.matlab||\
 &Makefile|mak|Ctrl+Shift+F11|\
 #MetaPost|mp||\
diff -r 77399602f8dc src/SciTEProps.cxx
--- scite/src/SciTEProps.cxx	Wed Jul 28 10:38:18 2010 +1000
+++ scite/src/SciTEProps.cxx	Tue Aug 31 17:56:05 2010 -0400
@@ -526,11 +526,13 @@
  * A list of all the properties that should be forwarded to Scintilla lexers.
  */
 static const char *propertiesToForward[] = {
+	"SciteDefaultHome", // needed by LexLPeg
 //++Autogenerated -- run src/LexGen.py to regenerate
 //**\(\t"\*",\n\)
 	"asp.default.language",
 	"fold",
 	"fold.at.else",
+	"fold.by.indentation",
 	"fold.comment",
 	"fold.comment.nimrod",
 	"fold.comment.yaml",
@@ -559,6 +561,9 @@
 	"lexer.flagship.styling.within.preprocessor",
 	"lexer.html.django",
 	"lexer.html.mako",
+	"lexer.lua.color.theme",
+	"lexer.lua.home",
+	"lexer.lua.script",
 	"lexer.metapost.comment.process",
 	"lexer.metapost.interface.default",
 	"lexer.pascal.smart.highlighting",
@@ -700,7 +705,17 @@
 		if (language.startswith("script_")) {
 			wEditor.Call(SCI_SETLEXER, SCLEX_CONTAINER);
 		} else {
-			wEditor.CallString(SCI_SETLEXERLANGUAGE, 0, language.c_str());
+			if (lexLanguage != lexLPeg) {
+				wEditor.CallString(SCI_SETLEXERLANGUAGE, 0, language.c_str());
+				int lex = wEditor.Call(SCI_GETLEXER);
+				if (lex != SCLEX_NULL && strcmp(language.c_str(), "llpeg") == 0) {
+					lexLPeg = lex;
+					wEditor.CallString(SCI_PRIVATELEXERCALL, SCI_SETLEXERLANGUAGE, "container");
+				}
+			} else {
+				// Set the LPeg lexer language.
+				wEditor.CallString(SCI_PRIVATELEXERCALL, SCI_SETLEXERLANGUAGE, language.c_str());
+			}
 		}
 	} else {
 		wEditor.Call(SCI_SETLEXER, SCLEX_NULL);
@@ -1210,6 +1225,18 @@
 void SciTEBase::ReadFontProperties() {
 	char key[200];
 	SString sval;
+	const char *language_name = language.c_str();
+
+	if (lexLanguage == lexLPeg) {
+		// Retrieve style info.
+		char prop_name[20], prop_str[256];
+		for (int i = 0; i < STYLE_MAX; i++) {
+			sprintf(prop_name, "style.llpeg.%0d", i);
+			wEditor.Send(SCI_PRIVATELEXERCALL, i - STYLE_MAX, reinterpret_cast<sptr_t>(prop_str));
+			props.Set(prop_name, static_cast<const char*>(prop_str));
+		}
+		language_name = "llpeg";
+	}
 
 	// Set styles
 	// For each window set the global default style, then the language default style, then the other global styles, then the other language styles
@@ -1222,14 +1249,14 @@
 	SetOneStyle(wEditor, STYLE_DEFAULT, sval.c_str());
 	SetOneStyle(wOutput, STYLE_DEFAULT, sval.c_str());
 
-	sprintf(key, "style.%s.%0d", language.c_str(), STYLE_DEFAULT);
+	sprintf(key, "style.%s.%0d", language_name, STYLE_DEFAULT);
 	sval = props.GetNewExpand(key);
 	SetOneStyle(wEditor, STYLE_DEFAULT, sval.c_str());
 
 	wEditor.Call(SCI_STYLECLEARALL, 0, 0);
 
 	SetStyleFor(wEditor, "*");
-	SetStyleFor(wEditor, language.c_str());
+	SetStyleFor(wEditor, language_name);
 
 	wOutput.Call(SCI_STYLECLEARALL, 0, 0);
 

